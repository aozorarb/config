!_TAG_EXTRA_DESCRIPTION	anonymous	/Include tags for non-named objects like lambda/
!_TAG_EXTRA_DESCRIPTION	fileScope	/Include tags of file scope/
!_TAG_EXTRA_DESCRIPTION	pseudo	/Include pseudo tags/
!_TAG_EXTRA_DESCRIPTION	subparser	/Include tags generated by subparsers/
!_TAG_FIELD_DESCRIPTION	epoch	/the last modified time of the input file (only for F\/file kind tag)/
!_TAG_FIELD_DESCRIPTION	file	/File-restricted scoping/
!_TAG_FIELD_DESCRIPTION	input	/input file/
!_TAG_FIELD_DESCRIPTION	name	/tag name/
!_TAG_FIELD_DESCRIPTION	pattern	/pattern/
!_TAG_FIELD_DESCRIPTION	typeref	/Type and name of a variable or typedef/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_KIND_DESCRIPTION!Vim	C,constant	/constant definitions/
!_TAG_KIND_DESCRIPTION!Vim	a,augroup	/autocommand groups/
!_TAG_KIND_DESCRIPTION!Vim	c,command	/user-defined commands/
!_TAG_KIND_DESCRIPTION!Vim	f,function	/function definitions/
!_TAG_KIND_DESCRIPTION!Vim	m,map	/maps/
!_TAG_KIND_DESCRIPTION!Vim	n,filename	/vimball filename/
!_TAG_KIND_DESCRIPTION!Vim	v,variable	/variable definitions/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_OUTPUT_VERSION	0.0	/current.age/
!_TAG_PARSER_VERSION!Vim	0.0	/current.age/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/Users/aozora/.vim/rc/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	6.0.0	//
$CACHE	dein.vim	/^let $CACHE = expand('~\/.chache')$/;"	v
<C-a>	map.vim	/^xnoremap <C-a> <Home>$/;"	m
<Leader>O	map.vim	/^nnoremap <silent><Leader>O   :<C-u>put! =repeat(nr2char(10), v:count1)<CR>$/;"	m
<Leader>o	map.vim	/^nnoremap <silent><Leader>o   :<C-u>put =repeat(nr2char(10), v:count1)<CR>$/;"	m
<Leader>q	map.vim	/^nnoremap <silent><Leader>q   :<C-u>exit<CR>$/;"	m
<Leader>w	map.vim	/^nnoremap <silent><Leader>w   :<C-u>write<CR>$/;"	m
<Space>p+	map.vim	/^nnoremap <Space>p+  :<C-u>write !pbcopy<CR>$/;"	m
<leader>acf	map.vim	/^nmap     <leader>acf [ACFCMD]$/;"	m
<leader>h	map.vim	/^nnoremap <leader>h :nohl<CR>$/;"	m
<leader>l	map.vim	/^nnoremap <leader>l :LspStopServer<CR>$/;"	m
<leader>m	map.vim	/^nmap <leader>m [Mark]$/;"	m
<leader>ss	map.vim	/^nnoremap <leader>ss :<c-u>source $HOME\/.vim\/vimrc<CR>$/;"	m
<leader>t	map.vim	/^nmap     <leader>t [TABCMD]$/;"	m
AtCoder_open_contests	plug.vim	/^function! AtCoder_open_contests(contests, ext) abort$/;"	f
Binary	auto.vim	/^augroup Binary$/;"	a
GDScript	auto.vim	/^augroup GDScript$/;"	a
X	map.vim	/^nnoremap X "_D$/;"	m
[ACFCMD]	map.vim	/^nnoremap [ACFCMD] <nop>$/;"	m
[ACFCMD]g	map.vim	/^nnoremap [ACFCMD]g :! at_coder_friends check-and-go % <CR>$/;"	m
[ACFCMD]o	map.vim	/^nnoremap [ACFCMD]o :call AtCoder_open_contests(atCoder_solvable, atCoder_extension)<CR>$/;"	m
[ACFCMD]s	map.vim	/^nnoremap [ACFCMD]s :! at_coder_friends submit % <CR>$/;"	m
[ACFCMD]t	map.vim	/^nnoremap [ACFCMD]t :! at_coder_friends test-all % <CR>$/;"	m
[Mark]	map.vim	/^nnoremap [Mark] <Nop>$/;"	m
[Mark]l	map.vim	/^nnoremap [Mark]l :<C-u>marks<CR>$/;"	m
[TABCMD]	map.vim	/^nnoremap [TABCMD] <nop>$/;"	m
[TABCMD]c	map.vim	/^nnoremap <silent> [TABCMD]c :<c-u>tabclose<CR>$/;"	m
[TABCMD]e	map.vim	/^nnoremap <silent> [TABCMD]e :<c-u>tabedit<CR>$/;"	m
[TABCMD]f	map.vim	/^nnoremap <silent> [TABCMD]f :<c-u>tabfirst<CR>$/;"	m
[TABCMD]l	map.vim	/^nnoremap <silent> [TABCMD]l :<c-u>tablast<CR>$/;"	m
[TABCMD]o	map.vim	/^nnoremap <silent> [TABCMD]o :<c-u>tabonly<CR>$/;"	m
[TABCMD]s	map.vim	/^nnoremap <silent> [TABCMD]s :<c-u>tabs<CR>$/;"	m
[b	map.vim	/^nnoremap <silent> [b :bprev<CR>$/;"	m
[m	map.vim	/^nnoremap [m [`$/;"	m
]b	map.vim	/^nnoremap <silent> ]b :bnext<CR>$/;"	m
]m	map.vim	/^nnoremap ]m ]`$/;"	m
atCoder_extension	map.vim	/^let atCoder_extension = 'rb'$/;"	v
atCoder_solvable	map.vim	/^let atCoder_solvable = ['A', 'B', 'C']$/;"	v
g:memolist_path	plug.vim	/^let g:memolist_path = "$HOME\/diary\/memo"$/;"	v
gj	map.vim	/^nnoremap gj j$/;"	m
gk	map.vim	/^nnoremap gk k$/;"	m
j	map.vim	/^nnoremap j gj$/;"	m
k	map.vim	/^nnoremap k gk$/;"	m
mapleader	map.vim	/^let mapleader = "\\<Space>"$/;"	v
s:dein_base	dein.vim	/^let s:dein_base = '~\/.cache\/dein\/'$/;"	v
s:dein_dir	dein.vim	/^let s:dein_dir = $CACHE . '\/dein\/repos\/github.com\/Shougo\/dein.vim'$/;"	v
x	map.vim	/^nnoremap x "_x$/;"	m
